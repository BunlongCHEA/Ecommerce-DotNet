# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: production
---
# ConfigMap for application settings
apiVersion: v1
kind: ConfigMap
metadata:
  name: aspnet-config
  namespace: production
data:
  ASPNETCORE_ENVIRONMENT: "Production"
  ASPNETCORE_URLS: "http://+:8080"
---
# Secret for database connection
apiVersion: v1
kind: Secret
metadata:
  name: aspnet-secrets
  namespace: production
type: Opaque
stringData:
  ConnectionStrings__DefaultConnection: "Server=DESKTOP-CQSN3MN\\SQLSERVERDEV2022;Database=Ecommerce;User Id=sa;Password=12345;TrustServerCertificate=True;"
---
# Deployment for Production
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aspnet-app
  namespace: production
  labels:
    app: aspnet-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aspnet-app
  template:
    metadata:
      labels:
        app: aspnet-app
    spec:
      containers:
      - name: aspnet-app
        image: your-registry/your-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: aspnet-config
              key: ASPNETCORE_ENVIRONMENT
        - name: ASPNETCORE_URLS
          valueFrom:
            configMapKeyRef:
              name: aspnet-config
              key: ASPNETCORE_URLS
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: aspnet-secrets
              key: ConnectionStrings__DefaultConnection
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
---
# Service for Production
apiVersion: v1
kind: Service
metadata:
  name: aspnet-service
  namespace: production
spec:
  selector:
    app: aspnet-app
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
---
# Ingress for Production
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aspnet-ingress
  namespace: production
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - yourdomain.com
    secretName: production-tls
  rules:
  - host: yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aspnet-service
            port:
              number: 80