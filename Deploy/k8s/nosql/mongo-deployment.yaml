# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  namespace: production
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:8.0
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-root-password
        - name: MONGO_INITDB_DATABASE
          value: "MongoDB"
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        - name: mongodb-config-volume
          mountPath: /etc/mongod.conf
          subPath: mongodb.conf
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: mongodb-pvc
      - name: mongodb-config-volume
        configMap:
          name: mongodb-config
      restartPolicy: Always

---
# MongoDB ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: production
data:
  mongodb.conf: |
    storage:
      dbPath: /data/db
    net:
      port: 27017
      bindIp: 0.0.0.0
    security:
      authorization: enabled
    systemLog:
      destination: file
      path: /var/log/mongodb/mongod.log
      logAppend: true

---
# MongoDB Secret
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: production
type: Opaque
data:
  # Username:
  mongodb-username: YWRtaW4=
  # Password:
  mongodb-password: aDgxZVZYaVpEVzZGM2RT
  # Root password:
  mongodb-root-password: MDdRbVJhMVJZclAzb3E0

---
# MongoDB Persistent Volume Claim For Storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard-rwo

---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: production
  labels:
    app: mongodb
spec:
  type: LoadBalancer
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
    # nodePort: 30017 # For NodePort type only
    protocol: TCP
    name: mongodb

---
# MongoDB Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mongodb-network-policy
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: mongodb
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow from ASP.NET API or specific app
  - from:
    - podSelector:
        matchLabels:
          app: aspnet-app  # Allow only your API pods
    # Only allow these namespaces
    - namespaceSelector:
        matchLabels:
          name: production
    # ports:
    # - protocol: TCP
    #   port: 27017

  # Allow from Mongo Express
  # - from:
  #   - podSelector:
  #       matchLabels:
  #         app: mongo-express
  #   ports:
  #   - protocol: TCP
  #     port: 27017
  
  # Allow external access (for MongoDB Compass)
  - from: []  # Allow from any external source
    ports:
    - protocol: TCP
      port: 27017
      
  egress:
  # - {}  # Allow all outbound traffic
  - to: []  # Allow DNS
    ports:
    - protocol: UDP
      port: 53
    # - protocol: TCP
    #   port: 53
  # - to:
  #   # Allow monitoring system
  #   - podSelector:
  #       matchLabels:
  #         app: prometheus
  #   ports:
  #   - protocol: TCP
  #     port: 9090