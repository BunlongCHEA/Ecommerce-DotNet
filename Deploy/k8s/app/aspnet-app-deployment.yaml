# ASP.NET Core 9 Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aspnet-app
  namespace: production
  labels:
    app: aspnet-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aspnet-app
  template:
    metadata:
      labels:
        app: aspnet-app
    spec:
      containers:
      - name: aspnet-app
        image: registry.gitlab.com/bunlongchea/ecommerce-dotnet:latest # Update with your registry
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: aspnet-config
              key: ASPNETCORE_ENVIRONMENT
        - name: ASPNETCORE_URLS
          valueFrom:
            configMapKeyRef:
              name: aspnet-config
              key: ASPNETCORE_URLS
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: aspnet-secrets
              key: ConnectionStrings__DefaultConnection
        - name: Jwt__Key
          valueFrom:
            secretKeyRef:
              name: aspnet-secrets
              key: Jwt__Key
        - name: Jwt__Issuer
          valueFrom:
            configMapKeyRef:
              name: aspnet-config
              key: Jwt__Issuer
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

---
# ASP.NET Service
apiVersion: v1
kind: Service
metadata:
  name: aspnet-service
  namespace: production
  labels:
    app: aspnet-app
  annotations:
    # For GKE with Cloudflare
    cloud.google.com/load-balancer-type: "External"
    # Backend configuration reference
    cloud.google.com/backend-config: '{"default": "aspnet-backend-config"}'
spec:
  type: LoadBalancer
  selector:
    app: aspnet-app
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http

---
# ASP.NET ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: aspnet-config
  namespace: production
data:
  ASPNETCORE_ENVIRONMENT: "Production"
  ASPNETCORE_URLS: "http://+:8080"
  Jwt__Issuer: "https://ecommerce.bunlong.site"

---
# ASP.NET Secrets
apiVersion: v1
kind: Secret
metadata:
  name: aspnet-secrets
  namespace: production
type: Opaque
data:
  ConnectionStrings__DefaultConnection: U2VydmVyPW1zc3FsLXNlcnZpY2UsMTQzMztEYXRhYmFzZT1FY29tbWVyY2U7VXNlciBJZD1zYTtQYXNzd29yZD1Zb3VyU3Ryb25nQFBhc3N3b3JkMTIzITtUcnVzdFNlcnZlckNlcnRpZmljYXRlPVRydWU7
  # Base64 encoded: Server=mssql-service,1433;Database=Ecommerce;User Id=sa;Password=YourStrong@Password123!;TrustServerCertificate=True;
  Jwt__Key: TFBCSGNVa1NPeTdiMWpsT3k5YSt2TU5qWW1ERU1KbUFaQ2tvU0krMVZCbz0=

---
# BackendConfig for Cloudflare integration
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: aspnet-backend-config
  namespace: production
spec:
  # Timeout settings optimized for Cloudflare
  timeoutSec: 300
  connectionDraining:
    drainingTimeoutSec: 60
  
  # Health check configuration
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 5
    healthyThreshold: 1
    unhealthyThreshold: 3
    port: 8080
    type: HTTP
    requestPath: /health
  
  # Session affinity (optional for stateful apps)
  sessionAffinity:
    affinityType: "CLIENT_IP"
    affinityCookieTtlSec: 86400
  
  # Security policy (optional)
  securityPolicy:
    name: "cloudflare-security-policy"
  
  # Custom request headers for Cloudflare
  customRequestHeaders:
    headers:
    - "X-Forwarded-Proto:https"
    - "X-Forwarded-Port:443"

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aspnet-ingress
  namespace: production
  annotations:
    # Use GKE Ingress instead of -- nginx
    kubernetes.io/ingress.class: "gce"
    # Backend configuration
    cloud.google.com/backend-config: '{"default": "aspnet-backend-config"}'
spec:
  rules:
  - host: ecommerce.bunlong.site
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific # Prefix
        backend:
          service:
            name: aspnet-service
            port:
              number: 80
  - host: www.ecommerce.bunlong.site
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: aspnet-service
            port:
              number: 80