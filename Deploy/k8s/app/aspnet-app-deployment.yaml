# ASP.NET Core 9 Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aspnet-app
  namespace: production
  labels:
    app: aspnet-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aspnet-app
  template:
    metadata:
      labels:
        app: aspnet-app
    spec:
      containers:
      - name: aspnet-app
        image: registry.gitlab.com/bunlongchea/ecommerce-dotnet:latest # Update with your registry
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: aspnet-config
              key: ASPNETCORE_ENVIRONMENT
        - name: ASPNETCORE_URLS
          valueFrom:
            configMapKeyRef:
              name: aspnet-config
              key: ASPNETCORE_URLS
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: aspnet-secrets
              key: ConnectionStrings__DefaultConnection
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

---
# ASP.NET Service
apiVersion: v1
kind: Service
metadata:
  name: aspnet-service
  namespace: production
  labels:
    app: aspnet-app
spec:
  type: ClusterIP
  selector:
    app: aspnet-app
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http

---
# ASP.NET ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: aspnet-config
  namespace: production
data:
  ASPNETCORE_ENVIRONMENT: "Production"
  ASPNETCORE_URLS: "http://+:8080"

---
# ASP.NET Secrets
apiVersion: v1
kind: Secret
metadata:
  name: aspnet-secrets
  namespace: production
type: Opaque
data:
  ConnectionStrings__DefaultConnection: U2VydmVyPW1zc3FsLXNlcnZpY2UsMTQzMztEYXRhYmFzZT1FY29tbWVyY2U7VXNlciBJZD1zYTtQYXNzd29yZD1Zb3VyU3Ryb25nQFBhc3N3b3JkMTIzITtUcnVzdFNlcnZlckNlcnRpZmljYXRlPVRydWU7
  # Base64 encoded: Server=mssql-service,1433;Database=Ecommerce;User Id=sa;Password=YourStrong@Password123!;TrustServerCertificate=True;

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aspnet-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # Cloudflare specific annotations
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    # Add CORS headers for Swagger
    nginx.ingress.kubernetes.io/cors-allow-origin: "http://ecommerce.bunlong.site"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    # Force HTTPS redirect
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  # For HTTP only
  rules:
  - host: ecommerce.bunlong.site
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aspnet-service
            port:
              number: 80
# spec:
#   tls:
#   - hosts:
#     - ecommerce.bunlong.site
#     secretName: aspnet-tls-secret
#   rules:
#   - host: ecommerce.bunlong.site
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: aspnet-service
#             port:
#               number: 80